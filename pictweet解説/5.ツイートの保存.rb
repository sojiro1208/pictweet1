form_whth(model: @tweet, local: true) do |form|   ※前回はURLをした
  modelオプションに指定されたインスタンス変数の状態により、リクエストを送るアクションを判断する。
  @tweetはnewアクションで定義されたアクションで定義したインスタンス変数なので、createアクションに送信される。

ストロングパラメーター：意図しないデータベースの読み書きを防ぐため
  requireメソッド：送信されたパラメーターの情報を持つparamsが使用できるメソッド
    パラメーターからどの情報を取得するかを選択する。
    【例】require
      params.require(:モデル名)  # 取得したい情報を指定する
      ※params[:モデル名]でも同じ情報を取得できるが、requireを使うことで、
      意図しないパラメーターをエラーとして返すことができる。
  permitメソッド：paramsが使用できるメソッド。取得したいキーを指定でき、指定したキーと値のセットのみを取得できる。
  【例】permit：キーを指定すると、それ以外のキーがあっても値を受け付けない。
    params.require(:モデル名).permit(:キー名, :キー名) # 取得したいキーを指定する
  
  プライベートメソッド：クラス外から呼び出すことのできないメソッド

バリデーション：データを登録する際に一定の制約をかけること。
  validatesメソッド：バリデーションを設定する際のメソッド
  【例】モデルファイル
    validates :カラム名, バリデーションの種類
  【例】モデルファイル：presence: trueと記述すると、nameカラムが「空ではないか」という制限を設ける
    validates :name, presence: true